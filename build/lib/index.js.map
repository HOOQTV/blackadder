{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* @module HttpClient */\nimport { install } from 'source-map-support'; install();\n\nimport heart from 'flashheart';\nconst pkg = require('../../package.json');\n\n/**\n * Class representing HttpClient\n */\nexport default class HttpClient {\n    constructor(options) {\n        this.options = {\n            name: `${pkg.name}`,\n            timeout: 5000,\n            userAgent: `${pkg.name}/${pkg.version}`,\n            defaults: {\n                json: true\n            }\n        };\n        this.options = Object.assign(this.options, options);\n        this.client = heart.createClient(this.options);\n    }\n\n    /**\n     * Common method call to flashheart\n     * @param {String} method\n     * @param {String} url\n     * @param [Object] body\n     * @param [Object] options\n     */\n    async common(method, url, body, options) {\n        method = method.toLowerCase();\n        return new Promise((resolve, reject) => {\n            const args = [\n                url,\n                body,\n                options\n            ];\n\n            if ([ 'get', 'delete' ].indexOf(method) >= 0) {\n                args.splice(1, 1);\n            }\n\n            args.push((error, body, response) => {\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    response,\n                    body\n                });\n            });\n\n            this.client[method].apply(this.client, args);\n        });\n    }\n\n    /**\n     * Request with payload\n     */\n    async withBody(method, url, body = {}, options = { headers: {}, json: true }) {\n        if (/x-www-form-urlencoded/.test(options.headers['Content-Type'])) {\n            options.form = body;\n            body = null;\n        } else if (/form-data/.test(options.headers['Content-Type'])) {\n            options.formData = body;\n            body = null;\n        }\n        // this is the application/json\n        return await this.common(method, url, body, options);\n    }\n\n    /**\n     * GET\n     * @param {String} url\n     * @param {Object} query\n     * @param {Object} options\n     */\n    async get(url, query = {}, options = {}) {\n        options.qs = query;\n        return await this.common('get', url, null, options);\n    }\n\n    /**\n     * POST\n     * @param {String} url\n     * @param {Object} body\n     * @param {Object} options\n     */\n    async post(url, body, options) {\n        return await this.withBody('post', url, body, options);\n    }\n\n    /**\n     * PUT\n     * @param {String} url\n     * @param {Object} body\n     * @param {Object} options\n     */\n    async put(url, body, options) {\n        return await this.withBody('put', url, body, options);\n    }\n\n    /**\n     * PATCH\n     * @param {String} url\n     * @param {Object} body\n     * @param {Object} options\n     */\n    async patch(url, body, options) {\n        return await this.withBody('patch', url, body, options);\n    }\n\n    /**\n     * DELETE\n     * @param {String} url\n     * @param {Object} query\n     * @param {Object} options\n     */\n    async delete(url, query = {}, options = {}) {\n        options.qs = query;\n        return await this.common('delete', url, null, options);\n    }\n}\n"],"sourceRoot":"/Users/diorahman/Experiments/hooq/src/luigi/blackadder/lib"}